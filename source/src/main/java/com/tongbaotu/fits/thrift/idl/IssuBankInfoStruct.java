/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.tongbaotu.fits.thrift.idl;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class IssuBankInfoStruct implements org.apache.thrift.TBase<IssuBankInfoStruct, IssuBankInfoStruct._Fields>, java.io.Serializable, Cloneable, Comparable<IssuBankInfoStruct> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("IssuBankInfoStruct");

  private static final org.apache.thrift.protocol.TField ISSU_BANK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("issu_bank_id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SETTLE_ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("settle_account_id", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ISSU_BANK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("issu_bank_name", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ORGA_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("orga_number", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField REGIST_ADDR_FIELD_DESC = new org.apache.thrift.protocol.TField("regist_addr", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CONTACT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("contact_name", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CONTACT_ADDR_FIELD_DESC = new org.apache.thrift.protocol.TField("contact_addr", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField FIXED_TELEPHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("fixed_telephone", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField MOBILE_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile_phone", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CUR_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("cur_state", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new IssuBankInfoStructStandardSchemeFactory());
    schemes.put(TupleScheme.class, new IssuBankInfoStructTupleSchemeFactory());
  }

  public String issu_bank_id; // required
  public String settle_account_id; // required
  public String issu_bank_name; // required
  public String orga_number; // required
  public String regist_addr; // required
  public String contact_name; // required
  public String contact_addr; // required
  public String fixed_telephone; // required
  public String mobile_phone; // required
  public String cur_state; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ISSU_BANK_ID((short)1, "issu_bank_id"),
    SETTLE_ACCOUNT_ID((short)2, "settle_account_id"),
    ISSU_BANK_NAME((short)3, "issu_bank_name"),
    ORGA_NUMBER((short)4, "orga_number"),
    REGIST_ADDR((short)5, "regist_addr"),
    CONTACT_NAME((short)6, "contact_name"),
    CONTACT_ADDR((short)7, "contact_addr"),
    FIXED_TELEPHONE((short)8, "fixed_telephone"),
    MOBILE_PHONE((short)9, "mobile_phone"),
    CUR_STATE((short)10, "cur_state");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ISSU_BANK_ID
          return ISSU_BANK_ID;
        case 2: // SETTLE_ACCOUNT_ID
          return SETTLE_ACCOUNT_ID;
        case 3: // ISSU_BANK_NAME
          return ISSU_BANK_NAME;
        case 4: // ORGA_NUMBER
          return ORGA_NUMBER;
        case 5: // REGIST_ADDR
          return REGIST_ADDR;
        case 6: // CONTACT_NAME
          return CONTACT_NAME;
        case 7: // CONTACT_ADDR
          return CONTACT_ADDR;
        case 8: // FIXED_TELEPHONE
          return FIXED_TELEPHONE;
        case 9: // MOBILE_PHONE
          return MOBILE_PHONE;
        case 10: // CUR_STATE
          return CUR_STATE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ISSU_BANK_ID, new org.apache.thrift.meta_data.FieldMetaData("issu_bank_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("settle_account_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ISSU_BANK_NAME, new org.apache.thrift.meta_data.FieldMetaData("issu_bank_name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORGA_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("orga_number", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REGIST_ADDR, new org.apache.thrift.meta_data.FieldMetaData("regist_addr", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_NAME, new org.apache.thrift.meta_data.FieldMetaData("contact_name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_ADDR, new org.apache.thrift.meta_data.FieldMetaData("contact_addr", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FIXED_TELEPHONE, new org.apache.thrift.meta_data.FieldMetaData("fixed_telephone", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE_PHONE, new org.apache.thrift.meta_data.FieldMetaData("mobile_phone", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUR_STATE, new org.apache.thrift.meta_data.FieldMetaData("cur_state", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(IssuBankInfoStruct.class, metaDataMap);
  }

  public IssuBankInfoStruct() {
  }

  public IssuBankInfoStruct(
    String issu_bank_id,
    String settle_account_id,
    String issu_bank_name,
    String orga_number,
    String regist_addr,
    String contact_name,
    String contact_addr,
    String fixed_telephone,
    String mobile_phone,
    String cur_state)
  {
    this();
    this.issu_bank_id = issu_bank_id;
    this.settle_account_id = settle_account_id;
    this.issu_bank_name = issu_bank_name;
    this.orga_number = orga_number;
    this.regist_addr = regist_addr;
    this.contact_name = contact_name;
    this.contact_addr = contact_addr;
    this.fixed_telephone = fixed_telephone;
    this.mobile_phone = mobile_phone;
    this.cur_state = cur_state;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public IssuBankInfoStruct(IssuBankInfoStruct other) {
    if (other.isSetIssu_bank_id()) {
      this.issu_bank_id = other.issu_bank_id;
    }
    if (other.isSetSettle_account_id()) {
      this.settle_account_id = other.settle_account_id;
    }
    if (other.isSetIssu_bank_name()) {
      this.issu_bank_name = other.issu_bank_name;
    }
    if (other.isSetOrga_number()) {
      this.orga_number = other.orga_number;
    }
    if (other.isSetRegist_addr()) {
      this.regist_addr = other.regist_addr;
    }
    if (other.isSetContact_name()) {
      this.contact_name = other.contact_name;
    }
    if (other.isSetContact_addr()) {
      this.contact_addr = other.contact_addr;
    }
    if (other.isSetFixed_telephone()) {
      this.fixed_telephone = other.fixed_telephone;
    }
    if (other.isSetMobile_phone()) {
      this.mobile_phone = other.mobile_phone;
    }
    if (other.isSetCur_state()) {
      this.cur_state = other.cur_state;
    }
  }

  public IssuBankInfoStruct deepCopy() {
    return new IssuBankInfoStruct(this);
  }

  @Override
  public void clear() {
    this.issu_bank_id = null;
    this.settle_account_id = null;
    this.issu_bank_name = null;
    this.orga_number = null;
    this.regist_addr = null;
    this.contact_name = null;
    this.contact_addr = null;
    this.fixed_telephone = null;
    this.mobile_phone = null;
    this.cur_state = null;
  }

  public String getIssu_bank_id() {
    return this.issu_bank_id;
  }

  public IssuBankInfoStruct setIssu_bank_id(String issu_bank_id) {
    this.issu_bank_id = issu_bank_id;
    return this;
  }

  public void unsetIssu_bank_id() {
    this.issu_bank_id = null;
  }

  /** Returns true if field issu_bank_id is set (has been assigned a value) and false otherwise */
  public boolean isSetIssu_bank_id() {
    return this.issu_bank_id != null;
  }

  public void setIssu_bank_idIsSet(boolean value) {
    if (!value) {
      this.issu_bank_id = null;
    }
  }

  public String getSettle_account_id() {
    return this.settle_account_id;
  }

  public IssuBankInfoStruct setSettle_account_id(String settle_account_id) {
    this.settle_account_id = settle_account_id;
    return this;
  }

  public void unsetSettle_account_id() {
    this.settle_account_id = null;
  }

  /** Returns true if field settle_account_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSettle_account_id() {
    return this.settle_account_id != null;
  }

  public void setSettle_account_idIsSet(boolean value) {
    if (!value) {
      this.settle_account_id = null;
    }
  }

  public String getIssu_bank_name() {
    return this.issu_bank_name;
  }

  public IssuBankInfoStruct setIssu_bank_name(String issu_bank_name) {
    this.issu_bank_name = issu_bank_name;
    return this;
  }

  public void unsetIssu_bank_name() {
    this.issu_bank_name = null;
  }

  /** Returns true if field issu_bank_name is set (has been assigned a value) and false otherwise */
  public boolean isSetIssu_bank_name() {
    return this.issu_bank_name != null;
  }

  public void setIssu_bank_nameIsSet(boolean value) {
    if (!value) {
      this.issu_bank_name = null;
    }
  }

  public String getOrga_number() {
    return this.orga_number;
  }

  public IssuBankInfoStruct setOrga_number(String orga_number) {
    this.orga_number = orga_number;
    return this;
  }

  public void unsetOrga_number() {
    this.orga_number = null;
  }

  /** Returns true if field orga_number is set (has been assigned a value) and false otherwise */
  public boolean isSetOrga_number() {
    return this.orga_number != null;
  }

  public void setOrga_numberIsSet(boolean value) {
    if (!value) {
      this.orga_number = null;
    }
  }

  public String getRegist_addr() {
    return this.regist_addr;
  }

  public IssuBankInfoStruct setRegist_addr(String regist_addr) {
    this.regist_addr = regist_addr;
    return this;
  }

  public void unsetRegist_addr() {
    this.regist_addr = null;
  }

  /** Returns true if field regist_addr is set (has been assigned a value) and false otherwise */
  public boolean isSetRegist_addr() {
    return this.regist_addr != null;
  }

  public void setRegist_addrIsSet(boolean value) {
    if (!value) {
      this.regist_addr = null;
    }
  }

  public String getContact_name() {
    return this.contact_name;
  }

  public IssuBankInfoStruct setContact_name(String contact_name) {
    this.contact_name = contact_name;
    return this;
  }

  public void unsetContact_name() {
    this.contact_name = null;
  }

  /** Returns true if field contact_name is set (has been assigned a value) and false otherwise */
  public boolean isSetContact_name() {
    return this.contact_name != null;
  }

  public void setContact_nameIsSet(boolean value) {
    if (!value) {
      this.contact_name = null;
    }
  }

  public String getContact_addr() {
    return this.contact_addr;
  }

  public IssuBankInfoStruct setContact_addr(String contact_addr) {
    this.contact_addr = contact_addr;
    return this;
  }

  public void unsetContact_addr() {
    this.contact_addr = null;
  }

  /** Returns true if field contact_addr is set (has been assigned a value) and false otherwise */
  public boolean isSetContact_addr() {
    return this.contact_addr != null;
  }

  public void setContact_addrIsSet(boolean value) {
    if (!value) {
      this.contact_addr = null;
    }
  }

  public String getFixed_telephone() {
    return this.fixed_telephone;
  }

  public IssuBankInfoStruct setFixed_telephone(String fixed_telephone) {
    this.fixed_telephone = fixed_telephone;
    return this;
  }

  public void unsetFixed_telephone() {
    this.fixed_telephone = null;
  }

  /** Returns true if field fixed_telephone is set (has been assigned a value) and false otherwise */
  public boolean isSetFixed_telephone() {
    return this.fixed_telephone != null;
  }

  public void setFixed_telephoneIsSet(boolean value) {
    if (!value) {
      this.fixed_telephone = null;
    }
  }

  public String getMobile_phone() {
    return this.mobile_phone;
  }

  public IssuBankInfoStruct setMobile_phone(String mobile_phone) {
    this.mobile_phone = mobile_phone;
    return this;
  }

  public void unsetMobile_phone() {
    this.mobile_phone = null;
  }

  /** Returns true if field mobile_phone is set (has been assigned a value) and false otherwise */
  public boolean isSetMobile_phone() {
    return this.mobile_phone != null;
  }

  public void setMobile_phoneIsSet(boolean value) {
    if (!value) {
      this.mobile_phone = null;
    }
  }

  public String getCur_state() {
    return this.cur_state;
  }

  public IssuBankInfoStruct setCur_state(String cur_state) {
    this.cur_state = cur_state;
    return this;
  }

  public void unsetCur_state() {
    this.cur_state = null;
  }

  /** Returns true if field cur_state is set (has been assigned a value) and false otherwise */
  public boolean isSetCur_state() {
    return this.cur_state != null;
  }

  public void setCur_stateIsSet(boolean value) {
    if (!value) {
      this.cur_state = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ISSU_BANK_ID:
      if (value == null) {
        unsetIssu_bank_id();
      } else {
        setIssu_bank_id((String)value);
      }
      break;

    case SETTLE_ACCOUNT_ID:
      if (value == null) {
        unsetSettle_account_id();
      } else {
        setSettle_account_id((String)value);
      }
      break;

    case ISSU_BANK_NAME:
      if (value == null) {
        unsetIssu_bank_name();
      } else {
        setIssu_bank_name((String)value);
      }
      break;

    case ORGA_NUMBER:
      if (value == null) {
        unsetOrga_number();
      } else {
        setOrga_number((String)value);
      }
      break;

    case REGIST_ADDR:
      if (value == null) {
        unsetRegist_addr();
      } else {
        setRegist_addr((String)value);
      }
      break;

    case CONTACT_NAME:
      if (value == null) {
        unsetContact_name();
      } else {
        setContact_name((String)value);
      }
      break;

    case CONTACT_ADDR:
      if (value == null) {
        unsetContact_addr();
      } else {
        setContact_addr((String)value);
      }
      break;

    case FIXED_TELEPHONE:
      if (value == null) {
        unsetFixed_telephone();
      } else {
        setFixed_telephone((String)value);
      }
      break;

    case MOBILE_PHONE:
      if (value == null) {
        unsetMobile_phone();
      } else {
        setMobile_phone((String)value);
      }
      break;

    case CUR_STATE:
      if (value == null) {
        unsetCur_state();
      } else {
        setCur_state((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ISSU_BANK_ID:
      return getIssu_bank_id();

    case SETTLE_ACCOUNT_ID:
      return getSettle_account_id();

    case ISSU_BANK_NAME:
      return getIssu_bank_name();

    case ORGA_NUMBER:
      return getOrga_number();

    case REGIST_ADDR:
      return getRegist_addr();

    case CONTACT_NAME:
      return getContact_name();

    case CONTACT_ADDR:
      return getContact_addr();

    case FIXED_TELEPHONE:
      return getFixed_telephone();

    case MOBILE_PHONE:
      return getMobile_phone();

    case CUR_STATE:
      return getCur_state();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ISSU_BANK_ID:
      return isSetIssu_bank_id();
    case SETTLE_ACCOUNT_ID:
      return isSetSettle_account_id();
    case ISSU_BANK_NAME:
      return isSetIssu_bank_name();
    case ORGA_NUMBER:
      return isSetOrga_number();
    case REGIST_ADDR:
      return isSetRegist_addr();
    case CONTACT_NAME:
      return isSetContact_name();
    case CONTACT_ADDR:
      return isSetContact_addr();
    case FIXED_TELEPHONE:
      return isSetFixed_telephone();
    case MOBILE_PHONE:
      return isSetMobile_phone();
    case CUR_STATE:
      return isSetCur_state();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof IssuBankInfoStruct)
      return this.equals((IssuBankInfoStruct)that);
    return false;
  }

  public boolean equals(IssuBankInfoStruct that) {
    if (that == null)
      return false;

    boolean this_present_issu_bank_id = true && this.isSetIssu_bank_id();
    boolean that_present_issu_bank_id = true && that.isSetIssu_bank_id();
    if (this_present_issu_bank_id || that_present_issu_bank_id) {
      if (!(this_present_issu_bank_id && that_present_issu_bank_id))
        return false;
      if (!this.issu_bank_id.equals(that.issu_bank_id))
        return false;
    }

    boolean this_present_settle_account_id = true && this.isSetSettle_account_id();
    boolean that_present_settle_account_id = true && that.isSetSettle_account_id();
    if (this_present_settle_account_id || that_present_settle_account_id) {
      if (!(this_present_settle_account_id && that_present_settle_account_id))
        return false;
      if (!this.settle_account_id.equals(that.settle_account_id))
        return false;
    }

    boolean this_present_issu_bank_name = true && this.isSetIssu_bank_name();
    boolean that_present_issu_bank_name = true && that.isSetIssu_bank_name();
    if (this_present_issu_bank_name || that_present_issu_bank_name) {
      if (!(this_present_issu_bank_name && that_present_issu_bank_name))
        return false;
      if (!this.issu_bank_name.equals(that.issu_bank_name))
        return false;
    }

    boolean this_present_orga_number = true && this.isSetOrga_number();
    boolean that_present_orga_number = true && that.isSetOrga_number();
    if (this_present_orga_number || that_present_orga_number) {
      if (!(this_present_orga_number && that_present_orga_number))
        return false;
      if (!this.orga_number.equals(that.orga_number))
        return false;
    }

    boolean this_present_regist_addr = true && this.isSetRegist_addr();
    boolean that_present_regist_addr = true && that.isSetRegist_addr();
    if (this_present_regist_addr || that_present_regist_addr) {
      if (!(this_present_regist_addr && that_present_regist_addr))
        return false;
      if (!this.regist_addr.equals(that.regist_addr))
        return false;
    }

    boolean this_present_contact_name = true && this.isSetContact_name();
    boolean that_present_contact_name = true && that.isSetContact_name();
    if (this_present_contact_name || that_present_contact_name) {
      if (!(this_present_contact_name && that_present_contact_name))
        return false;
      if (!this.contact_name.equals(that.contact_name))
        return false;
    }

    boolean this_present_contact_addr = true && this.isSetContact_addr();
    boolean that_present_contact_addr = true && that.isSetContact_addr();
    if (this_present_contact_addr || that_present_contact_addr) {
      if (!(this_present_contact_addr && that_present_contact_addr))
        return false;
      if (!this.contact_addr.equals(that.contact_addr))
        return false;
    }

    boolean this_present_fixed_telephone = true && this.isSetFixed_telephone();
    boolean that_present_fixed_telephone = true && that.isSetFixed_telephone();
    if (this_present_fixed_telephone || that_present_fixed_telephone) {
      if (!(this_present_fixed_telephone && that_present_fixed_telephone))
        return false;
      if (!this.fixed_telephone.equals(that.fixed_telephone))
        return false;
    }

    boolean this_present_mobile_phone = true && this.isSetMobile_phone();
    boolean that_present_mobile_phone = true && that.isSetMobile_phone();
    if (this_present_mobile_phone || that_present_mobile_phone) {
      if (!(this_present_mobile_phone && that_present_mobile_phone))
        return false;
      if (!this.mobile_phone.equals(that.mobile_phone))
        return false;
    }

    boolean this_present_cur_state = true && this.isSetCur_state();
    boolean that_present_cur_state = true && that.isSetCur_state();
    if (this_present_cur_state || that_present_cur_state) {
      if (!(this_present_cur_state && that_present_cur_state))
        return false;
      if (!this.cur_state.equals(that.cur_state))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(IssuBankInfoStruct other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetIssu_bank_id()).compareTo(other.isSetIssu_bank_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIssu_bank_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.issu_bank_id, other.issu_bank_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettle_account_id()).compareTo(other.isSetSettle_account_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettle_account_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settle_account_id, other.settle_account_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIssu_bank_name()).compareTo(other.isSetIssu_bank_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIssu_bank_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.issu_bank_name, other.issu_bank_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrga_number()).compareTo(other.isSetOrga_number());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrga_number()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orga_number, other.orga_number);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegist_addr()).compareTo(other.isSetRegist_addr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegist_addr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regist_addr, other.regist_addr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContact_name()).compareTo(other.isSetContact_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContact_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contact_name, other.contact_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContact_addr()).compareTo(other.isSetContact_addr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContact_addr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contact_addr, other.contact_addr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFixed_telephone()).compareTo(other.isSetFixed_telephone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFixed_telephone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fixed_telephone, other.fixed_telephone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMobile_phone()).compareTo(other.isSetMobile_phone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile_phone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile_phone, other.mobile_phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCur_state()).compareTo(other.isSetCur_state());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCur_state()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cur_state, other.cur_state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("IssuBankInfoStruct(");
    boolean first = true;

    sb.append("issu_bank_id:");
    if (this.issu_bank_id == null) {
      sb.append("null");
    } else {
      sb.append(this.issu_bank_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settle_account_id:");
    if (this.settle_account_id == null) {
      sb.append("null");
    } else {
      sb.append(this.settle_account_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("issu_bank_name:");
    if (this.issu_bank_name == null) {
      sb.append("null");
    } else {
      sb.append(this.issu_bank_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orga_number:");
    if (this.orga_number == null) {
      sb.append("null");
    } else {
      sb.append(this.orga_number);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regist_addr:");
    if (this.regist_addr == null) {
      sb.append("null");
    } else {
      sb.append(this.regist_addr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contact_name:");
    if (this.contact_name == null) {
      sb.append("null");
    } else {
      sb.append(this.contact_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contact_addr:");
    if (this.contact_addr == null) {
      sb.append("null");
    } else {
      sb.append(this.contact_addr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fixed_telephone:");
    if (this.fixed_telephone == null) {
      sb.append("null");
    } else {
      sb.append(this.fixed_telephone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mobile_phone:");
    if (this.mobile_phone == null) {
      sb.append("null");
    } else {
      sb.append(this.mobile_phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cur_state:");
    if (this.cur_state == null) {
      sb.append("null");
    } else {
      sb.append(this.cur_state);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (settle_account_id == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'settle_account_id' was not present! Struct: " + toString());
    }
    if (issu_bank_name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'issu_bank_name' was not present! Struct: " + toString());
    }
    if (orga_number == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'orga_number' was not present! Struct: " + toString());
    }
    if (regist_addr == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'regist_addr' was not present! Struct: " + toString());
    }
    if (contact_name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'contact_name' was not present! Struct: " + toString());
    }
    if (contact_addr == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'contact_addr' was not present! Struct: " + toString());
    }
    if (fixed_telephone == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'fixed_telephone' was not present! Struct: " + toString());
    }
    if (mobile_phone == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'mobile_phone' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class IssuBankInfoStructStandardSchemeFactory implements SchemeFactory {
    public IssuBankInfoStructStandardScheme getScheme() {
      return new IssuBankInfoStructStandardScheme();
    }
  }

  private static class IssuBankInfoStructStandardScheme extends StandardScheme<IssuBankInfoStruct> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, IssuBankInfoStruct struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ISSU_BANK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.issu_bank_id = iprot.readString();
              struct.setIssu_bank_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SETTLE_ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settle_account_id = iprot.readString();
              struct.setSettle_account_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ISSU_BANK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.issu_bank_name = iprot.readString();
              struct.setIssu_bank_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORGA_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orga_number = iprot.readString();
              struct.setOrga_numberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REGIST_ADDR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.regist_addr = iprot.readString();
              struct.setRegist_addrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CONTACT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contact_name = iprot.readString();
              struct.setContact_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CONTACT_ADDR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contact_addr = iprot.readString();
              struct.setContact_addrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // FIXED_TELEPHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fixed_telephone = iprot.readString();
              struct.setFixed_telephoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MOBILE_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobile_phone = iprot.readString();
              struct.setMobile_phoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CUR_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cur_state = iprot.readString();
              struct.setCur_stateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, IssuBankInfoStruct struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.issu_bank_id != null) {
        oprot.writeFieldBegin(ISSU_BANK_ID_FIELD_DESC);
        oprot.writeString(struct.issu_bank_id);
        oprot.writeFieldEnd();
      }
      if (struct.settle_account_id != null) {
        oprot.writeFieldBegin(SETTLE_ACCOUNT_ID_FIELD_DESC);
        oprot.writeString(struct.settle_account_id);
        oprot.writeFieldEnd();
      }
      if (struct.issu_bank_name != null) {
        oprot.writeFieldBegin(ISSU_BANK_NAME_FIELD_DESC);
        oprot.writeString(struct.issu_bank_name);
        oprot.writeFieldEnd();
      }
      if (struct.orga_number != null) {
        oprot.writeFieldBegin(ORGA_NUMBER_FIELD_DESC);
        oprot.writeString(struct.orga_number);
        oprot.writeFieldEnd();
      }
      if (struct.regist_addr != null) {
        oprot.writeFieldBegin(REGIST_ADDR_FIELD_DESC);
        oprot.writeString(struct.regist_addr);
        oprot.writeFieldEnd();
      }
      if (struct.contact_name != null) {
        oprot.writeFieldBegin(CONTACT_NAME_FIELD_DESC);
        oprot.writeString(struct.contact_name);
        oprot.writeFieldEnd();
      }
      if (struct.contact_addr != null) {
        oprot.writeFieldBegin(CONTACT_ADDR_FIELD_DESC);
        oprot.writeString(struct.contact_addr);
        oprot.writeFieldEnd();
      }
      if (struct.fixed_telephone != null) {
        oprot.writeFieldBegin(FIXED_TELEPHONE_FIELD_DESC);
        oprot.writeString(struct.fixed_telephone);
        oprot.writeFieldEnd();
      }
      if (struct.mobile_phone != null) {
        oprot.writeFieldBegin(MOBILE_PHONE_FIELD_DESC);
        oprot.writeString(struct.mobile_phone);
        oprot.writeFieldEnd();
      }
      if (struct.cur_state != null) {
        oprot.writeFieldBegin(CUR_STATE_FIELD_DESC);
        oprot.writeString(struct.cur_state);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class IssuBankInfoStructTupleSchemeFactory implements SchemeFactory {
    public IssuBankInfoStructTupleScheme getScheme() {
      return new IssuBankInfoStructTupleScheme();
    }
  }

  private static class IssuBankInfoStructTupleScheme extends TupleScheme<IssuBankInfoStruct> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, IssuBankInfoStruct struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.settle_account_id);
      oprot.writeString(struct.issu_bank_name);
      oprot.writeString(struct.orga_number);
      oprot.writeString(struct.regist_addr);
      oprot.writeString(struct.contact_name);
      oprot.writeString(struct.contact_addr);
      oprot.writeString(struct.fixed_telephone);
      oprot.writeString(struct.mobile_phone);
      BitSet optionals = new BitSet();
      if (struct.isSetIssu_bank_id()) {
        optionals.set(0);
      }
      if (struct.isSetCur_state()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetIssu_bank_id()) {
        oprot.writeString(struct.issu_bank_id);
      }
      if (struct.isSetCur_state()) {
        oprot.writeString(struct.cur_state);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, IssuBankInfoStruct struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.settle_account_id = iprot.readString();
      struct.setSettle_account_idIsSet(true);
      struct.issu_bank_name = iprot.readString();
      struct.setIssu_bank_nameIsSet(true);
      struct.orga_number = iprot.readString();
      struct.setOrga_numberIsSet(true);
      struct.regist_addr = iprot.readString();
      struct.setRegist_addrIsSet(true);
      struct.contact_name = iprot.readString();
      struct.setContact_nameIsSet(true);
      struct.contact_addr = iprot.readString();
      struct.setContact_addrIsSet(true);
      struct.fixed_telephone = iprot.readString();
      struct.setFixed_telephoneIsSet(true);
      struct.mobile_phone = iprot.readString();
      struct.setMobile_phoneIsSet(true);
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.issu_bank_id = iprot.readString();
        struct.setIssu_bank_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.cur_state = iprot.readString();
        struct.setCur_stateIsSet(true);
      }
    }
  }

}

