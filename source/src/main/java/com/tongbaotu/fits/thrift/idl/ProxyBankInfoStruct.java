/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.tongbaotu.fits.thrift.idl;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ProxyBankInfoStruct implements org.apache.thrift.TBase<ProxyBankInfoStruct, ProxyBankInfoStruct._Fields>, java.io.Serializable, Cloneable, Comparable<ProxyBankInfoStruct> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProxyBankInfoStruct");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ORGANIZATION_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("organizationCode", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ZIP_FIELD_DESC = new org.apache.thrift.protocol.TField("ZIP", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField FIXED_TELEPHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("fixedTelephone", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField FAX_FIELD_DESC = new org.apache.thrift.protocol.TField("FAX", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField WEB_SITE_FIELD_DESC = new org.apache.thrift.protocol.TField("webSite", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField TBTCAPITAL_ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("TBTCapitalAccountID", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CONTACT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("contactName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField MOBILE_PHONE_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("mobilePhoneNumber", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CONTACT_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("contactAddress", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField REGISTER_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("registerDate", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)15);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProxyBankInfoStructStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProxyBankInfoStructTupleSchemeFactory());
  }

  public String id; // required
  public String name; // required
  public String organizationCode; // required
  public String address; // required
  public String ZIP; // required
  public String fixedTelephone; // required
  public String FAX; // required
  public String webSite; // required
  public String TBTCapitalAccountID; // required
  public String contactName; // required
  public String mobilePhoneNumber; // required
  public String email; // required
  public String contactAddress; // required
  public int registerDate; // required
  public int status; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    ORGANIZATION_CODE((short)3, "organizationCode"),
    ADDRESS((short)4, "address"),
    ZIP((short)5, "ZIP"),
    FIXED_TELEPHONE((short)6, "fixedTelephone"),
    FAX((short)7, "FAX"),
    WEB_SITE((short)8, "webSite"),
    TBTCAPITAL_ACCOUNT_ID((short)9, "TBTCapitalAccountID"),
    CONTACT_NAME((short)10, "contactName"),
    MOBILE_PHONE_NUMBER((short)11, "mobilePhoneNumber"),
    EMAIL((short)12, "email"),
    CONTACT_ADDRESS((short)13, "contactAddress"),
    REGISTER_DATE((short)14, "registerDate"),
    STATUS((short)15, "status");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // ORGANIZATION_CODE
          return ORGANIZATION_CODE;
        case 4: // ADDRESS
          return ADDRESS;
        case 5: // ZIP
          return ZIP;
        case 6: // FIXED_TELEPHONE
          return FIXED_TELEPHONE;
        case 7: // FAX
          return FAX;
        case 8: // WEB_SITE
          return WEB_SITE;
        case 9: // TBTCAPITAL_ACCOUNT_ID
          return TBTCAPITAL_ACCOUNT_ID;
        case 10: // CONTACT_NAME
          return CONTACT_NAME;
        case 11: // MOBILE_PHONE_NUMBER
          return MOBILE_PHONE_NUMBER;
        case 12: // EMAIL
          return EMAIL;
        case 13: // CONTACT_ADDRESS
          return CONTACT_ADDRESS;
        case 14: // REGISTER_DATE
          return REGISTER_DATE;
        case 15: // STATUS
          return STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __REGISTERDATE_ISSET_ID = 0;
  private static final int __STATUS_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORGANIZATION_CODE, new org.apache.thrift.meta_data.FieldMetaData("organizationCode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ZIP, new org.apache.thrift.meta_data.FieldMetaData("ZIP", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FIXED_TELEPHONE, new org.apache.thrift.meta_data.FieldMetaData("fixedTelephone", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FAX, new org.apache.thrift.meta_data.FieldMetaData("FAX", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEB_SITE, new org.apache.thrift.meta_data.FieldMetaData("webSite", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TBTCAPITAL_ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("TBTCapitalAccountID", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_NAME, new org.apache.thrift.meta_data.FieldMetaData("contactName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE_PHONE_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("mobilePhoneNumber", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("contactAddress", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REGISTER_DATE, new org.apache.thrift.meta_data.FieldMetaData("registerDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProxyBankInfoStruct.class, metaDataMap);
  }

  public ProxyBankInfoStruct() {
  }

  public ProxyBankInfoStruct(
    String id,
    String name,
    String organizationCode,
    String address,
    String ZIP,
    String fixedTelephone,
    String FAX,
    String webSite,
    String TBTCapitalAccountID,
    String contactName,
    String mobilePhoneNumber,
    String email,
    String contactAddress,
    int registerDate,
    int status)
  {
    this();
    this.id = id;
    this.name = name;
    this.organizationCode = organizationCode;
    this.address = address;
    this.ZIP = ZIP;
    this.fixedTelephone = fixedTelephone;
    this.FAX = FAX;
    this.webSite = webSite;
    this.TBTCapitalAccountID = TBTCapitalAccountID;
    this.contactName = contactName;
    this.mobilePhoneNumber = mobilePhoneNumber;
    this.email = email;
    this.contactAddress = contactAddress;
    this.registerDate = registerDate;
    setRegisterDateIsSet(true);
    this.status = status;
    setStatusIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProxyBankInfoStruct(ProxyBankInfoStruct other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetOrganizationCode()) {
      this.organizationCode = other.organizationCode;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetZIP()) {
      this.ZIP = other.ZIP;
    }
    if (other.isSetFixedTelephone()) {
      this.fixedTelephone = other.fixedTelephone;
    }
    if (other.isSetFAX()) {
      this.FAX = other.FAX;
    }
    if (other.isSetWebSite()) {
      this.webSite = other.webSite;
    }
    if (other.isSetTBTCapitalAccountID()) {
      this.TBTCapitalAccountID = other.TBTCapitalAccountID;
    }
    if (other.isSetContactName()) {
      this.contactName = other.contactName;
    }
    if (other.isSetMobilePhoneNumber()) {
      this.mobilePhoneNumber = other.mobilePhoneNumber;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetContactAddress()) {
      this.contactAddress = other.contactAddress;
    }
    this.registerDate = other.registerDate;
    this.status = other.status;
  }

  public ProxyBankInfoStruct deepCopy() {
    return new ProxyBankInfoStruct(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.name = null;
    this.organizationCode = null;
    this.address = null;
    this.ZIP = null;
    this.fixedTelephone = null;
    this.FAX = null;
    this.webSite = null;
    this.TBTCapitalAccountID = null;
    this.contactName = null;
    this.mobilePhoneNumber = null;
    this.email = null;
    this.contactAddress = null;
    setRegisterDateIsSet(false);
    this.registerDate = 0;
    setStatusIsSet(false);
    this.status = 0;
  }

  public String getId() {
    return this.id;
  }

  public ProxyBankInfoStruct setId(String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public String getName() {
    return this.name;
  }

  public ProxyBankInfoStruct setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getOrganizationCode() {
    return this.organizationCode;
  }

  public ProxyBankInfoStruct setOrganizationCode(String organizationCode) {
    this.organizationCode = organizationCode;
    return this;
  }

  public void unsetOrganizationCode() {
    this.organizationCode = null;
  }

  /** Returns true if field organizationCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrganizationCode() {
    return this.organizationCode != null;
  }

  public void setOrganizationCodeIsSet(boolean value) {
    if (!value) {
      this.organizationCode = null;
    }
  }

  public String getAddress() {
    return this.address;
  }

  public ProxyBankInfoStruct setAddress(String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public String getZIP() {
    return this.ZIP;
  }

  public ProxyBankInfoStruct setZIP(String ZIP) {
    this.ZIP = ZIP;
    return this;
  }

  public void unsetZIP() {
    this.ZIP = null;
  }

  /** Returns true if field ZIP is set (has been assigned a value) and false otherwise */
  public boolean isSetZIP() {
    return this.ZIP != null;
  }

  public void setZIPIsSet(boolean value) {
    if (!value) {
      this.ZIP = null;
    }
  }

  public String getFixedTelephone() {
    return this.fixedTelephone;
  }

  public ProxyBankInfoStruct setFixedTelephone(String fixedTelephone) {
    this.fixedTelephone = fixedTelephone;
    return this;
  }

  public void unsetFixedTelephone() {
    this.fixedTelephone = null;
  }

  /** Returns true if field fixedTelephone is set (has been assigned a value) and false otherwise */
  public boolean isSetFixedTelephone() {
    return this.fixedTelephone != null;
  }

  public void setFixedTelephoneIsSet(boolean value) {
    if (!value) {
      this.fixedTelephone = null;
    }
  }

  public String getFAX() {
    return this.FAX;
  }

  public ProxyBankInfoStruct setFAX(String FAX) {
    this.FAX = FAX;
    return this;
  }

  public void unsetFAX() {
    this.FAX = null;
  }

  /** Returns true if field FAX is set (has been assigned a value) and false otherwise */
  public boolean isSetFAX() {
    return this.FAX != null;
  }

  public void setFAXIsSet(boolean value) {
    if (!value) {
      this.FAX = null;
    }
  }

  public String getWebSite() {
    return this.webSite;
  }

  public ProxyBankInfoStruct setWebSite(String webSite) {
    this.webSite = webSite;
    return this;
  }

  public void unsetWebSite() {
    this.webSite = null;
  }

  /** Returns true if field webSite is set (has been assigned a value) and false otherwise */
  public boolean isSetWebSite() {
    return this.webSite != null;
  }

  public void setWebSiteIsSet(boolean value) {
    if (!value) {
      this.webSite = null;
    }
  }

  public String getTBTCapitalAccountID() {
    return this.TBTCapitalAccountID;
  }

  public ProxyBankInfoStruct setTBTCapitalAccountID(String TBTCapitalAccountID) {
    this.TBTCapitalAccountID = TBTCapitalAccountID;
    return this;
  }

  public void unsetTBTCapitalAccountID() {
    this.TBTCapitalAccountID = null;
  }

  /** Returns true if field TBTCapitalAccountID is set (has been assigned a value) and false otherwise */
  public boolean isSetTBTCapitalAccountID() {
    return this.TBTCapitalAccountID != null;
  }

  public void setTBTCapitalAccountIDIsSet(boolean value) {
    if (!value) {
      this.TBTCapitalAccountID = null;
    }
  }

  public String getContactName() {
    return this.contactName;
  }

  public ProxyBankInfoStruct setContactName(String contactName) {
    this.contactName = contactName;
    return this;
  }

  public void unsetContactName() {
    this.contactName = null;
  }

  /** Returns true if field contactName is set (has been assigned a value) and false otherwise */
  public boolean isSetContactName() {
    return this.contactName != null;
  }

  public void setContactNameIsSet(boolean value) {
    if (!value) {
      this.contactName = null;
    }
  }

  public String getMobilePhoneNumber() {
    return this.mobilePhoneNumber;
  }

  public ProxyBankInfoStruct setMobilePhoneNumber(String mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
    return this;
  }

  public void unsetMobilePhoneNumber() {
    this.mobilePhoneNumber = null;
  }

  /** Returns true if field mobilePhoneNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetMobilePhoneNumber() {
    return this.mobilePhoneNumber != null;
  }

  public void setMobilePhoneNumberIsSet(boolean value) {
    if (!value) {
      this.mobilePhoneNumber = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public ProxyBankInfoStruct setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public String getContactAddress() {
    return this.contactAddress;
  }

  public ProxyBankInfoStruct setContactAddress(String contactAddress) {
    this.contactAddress = contactAddress;
    return this;
  }

  public void unsetContactAddress() {
    this.contactAddress = null;
  }

  /** Returns true if field contactAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetContactAddress() {
    return this.contactAddress != null;
  }

  public void setContactAddressIsSet(boolean value) {
    if (!value) {
      this.contactAddress = null;
    }
  }

  public int getRegisterDate() {
    return this.registerDate;
  }

  public ProxyBankInfoStruct setRegisterDate(int registerDate) {
    this.registerDate = registerDate;
    setRegisterDateIsSet(true);
    return this;
  }

  public void unsetRegisterDate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REGISTERDATE_ISSET_ID);
  }

  /** Returns true if field registerDate is set (has been assigned a value) and false otherwise */
  public boolean isSetRegisterDate() {
    return EncodingUtils.testBit(__isset_bitfield, __REGISTERDATE_ISSET_ID);
  }

  public void setRegisterDateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REGISTERDATE_ISSET_ID, value);
  }

  public int getStatus() {
    return this.status;
  }

  public ProxyBankInfoStruct setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case ORGANIZATION_CODE:
      if (value == null) {
        unsetOrganizationCode();
      } else {
        setOrganizationCode((String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((String)value);
      }
      break;

    case ZIP:
      if (value == null) {
        unsetZIP();
      } else {
        setZIP((String)value);
      }
      break;

    case FIXED_TELEPHONE:
      if (value == null) {
        unsetFixedTelephone();
      } else {
        setFixedTelephone((String)value);
      }
      break;

    case FAX:
      if (value == null) {
        unsetFAX();
      } else {
        setFAX((String)value);
      }
      break;

    case WEB_SITE:
      if (value == null) {
        unsetWebSite();
      } else {
        setWebSite((String)value);
      }
      break;

    case TBTCAPITAL_ACCOUNT_ID:
      if (value == null) {
        unsetTBTCapitalAccountID();
      } else {
        setTBTCapitalAccountID((String)value);
      }
      break;

    case CONTACT_NAME:
      if (value == null) {
        unsetContactName();
      } else {
        setContactName((String)value);
      }
      break;

    case MOBILE_PHONE_NUMBER:
      if (value == null) {
        unsetMobilePhoneNumber();
      } else {
        setMobilePhoneNumber((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case CONTACT_ADDRESS:
      if (value == null) {
        unsetContactAddress();
      } else {
        setContactAddress((String)value);
      }
      break;

    case REGISTER_DATE:
      if (value == null) {
        unsetRegisterDate();
      } else {
        setRegisterDate((Integer)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case ORGANIZATION_CODE:
      return getOrganizationCode();

    case ADDRESS:
      return getAddress();

    case ZIP:
      return getZIP();

    case FIXED_TELEPHONE:
      return getFixedTelephone();

    case FAX:
      return getFAX();

    case WEB_SITE:
      return getWebSite();

    case TBTCAPITAL_ACCOUNT_ID:
      return getTBTCapitalAccountID();

    case CONTACT_NAME:
      return getContactName();

    case MOBILE_PHONE_NUMBER:
      return getMobilePhoneNumber();

    case EMAIL:
      return getEmail();

    case CONTACT_ADDRESS:
      return getContactAddress();

    case REGISTER_DATE:
      return Integer.valueOf(getRegisterDate());

    case STATUS:
      return Integer.valueOf(getStatus());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case ORGANIZATION_CODE:
      return isSetOrganizationCode();
    case ADDRESS:
      return isSetAddress();
    case ZIP:
      return isSetZIP();
    case FIXED_TELEPHONE:
      return isSetFixedTelephone();
    case FAX:
      return isSetFAX();
    case WEB_SITE:
      return isSetWebSite();
    case TBTCAPITAL_ACCOUNT_ID:
      return isSetTBTCapitalAccountID();
    case CONTACT_NAME:
      return isSetContactName();
    case MOBILE_PHONE_NUMBER:
      return isSetMobilePhoneNumber();
    case EMAIL:
      return isSetEmail();
    case CONTACT_ADDRESS:
      return isSetContactAddress();
    case REGISTER_DATE:
      return isSetRegisterDate();
    case STATUS:
      return isSetStatus();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProxyBankInfoStruct)
      return this.equals((ProxyBankInfoStruct)that);
    return false;
  }

  public boolean equals(ProxyBankInfoStruct that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_organizationCode = true && this.isSetOrganizationCode();
    boolean that_present_organizationCode = true && that.isSetOrganizationCode();
    if (this_present_organizationCode || that_present_organizationCode) {
      if (!(this_present_organizationCode && that_present_organizationCode))
        return false;
      if (!this.organizationCode.equals(that.organizationCode))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_ZIP = true && this.isSetZIP();
    boolean that_present_ZIP = true && that.isSetZIP();
    if (this_present_ZIP || that_present_ZIP) {
      if (!(this_present_ZIP && that_present_ZIP))
        return false;
      if (!this.ZIP.equals(that.ZIP))
        return false;
    }

    boolean this_present_fixedTelephone = true && this.isSetFixedTelephone();
    boolean that_present_fixedTelephone = true && that.isSetFixedTelephone();
    if (this_present_fixedTelephone || that_present_fixedTelephone) {
      if (!(this_present_fixedTelephone && that_present_fixedTelephone))
        return false;
      if (!this.fixedTelephone.equals(that.fixedTelephone))
        return false;
    }

    boolean this_present_FAX = true && this.isSetFAX();
    boolean that_present_FAX = true && that.isSetFAX();
    if (this_present_FAX || that_present_FAX) {
      if (!(this_present_FAX && that_present_FAX))
        return false;
      if (!this.FAX.equals(that.FAX))
        return false;
    }

    boolean this_present_webSite = true && this.isSetWebSite();
    boolean that_present_webSite = true && that.isSetWebSite();
    if (this_present_webSite || that_present_webSite) {
      if (!(this_present_webSite && that_present_webSite))
        return false;
      if (!this.webSite.equals(that.webSite))
        return false;
    }

    boolean this_present_TBTCapitalAccountID = true && this.isSetTBTCapitalAccountID();
    boolean that_present_TBTCapitalAccountID = true && that.isSetTBTCapitalAccountID();
    if (this_present_TBTCapitalAccountID || that_present_TBTCapitalAccountID) {
      if (!(this_present_TBTCapitalAccountID && that_present_TBTCapitalAccountID))
        return false;
      if (!this.TBTCapitalAccountID.equals(that.TBTCapitalAccountID))
        return false;
    }

    boolean this_present_contactName = true && this.isSetContactName();
    boolean that_present_contactName = true && that.isSetContactName();
    if (this_present_contactName || that_present_contactName) {
      if (!(this_present_contactName && that_present_contactName))
        return false;
      if (!this.contactName.equals(that.contactName))
        return false;
    }

    boolean this_present_mobilePhoneNumber = true && this.isSetMobilePhoneNumber();
    boolean that_present_mobilePhoneNumber = true && that.isSetMobilePhoneNumber();
    if (this_present_mobilePhoneNumber || that_present_mobilePhoneNumber) {
      if (!(this_present_mobilePhoneNumber && that_present_mobilePhoneNumber))
        return false;
      if (!this.mobilePhoneNumber.equals(that.mobilePhoneNumber))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_contactAddress = true && this.isSetContactAddress();
    boolean that_present_contactAddress = true && that.isSetContactAddress();
    if (this_present_contactAddress || that_present_contactAddress) {
      if (!(this_present_contactAddress && that_present_contactAddress))
        return false;
      if (!this.contactAddress.equals(that.contactAddress))
        return false;
    }

    boolean this_present_registerDate = true;
    boolean that_present_registerDate = true;
    if (this_present_registerDate || that_present_registerDate) {
      if (!(this_present_registerDate && that_present_registerDate))
        return false;
      if (this.registerDate != that.registerDate)
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ProxyBankInfoStruct other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrganizationCode()).compareTo(other.isSetOrganizationCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrganizationCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.organizationCode, other.organizationCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetZIP()).compareTo(other.isSetZIP());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetZIP()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ZIP, other.ZIP);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFixedTelephone()).compareTo(other.isSetFixedTelephone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFixedTelephone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fixedTelephone, other.fixedTelephone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFAX()).compareTo(other.isSetFAX());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFAX()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.FAX, other.FAX);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWebSite()).compareTo(other.isSetWebSite());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWebSite()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.webSite, other.webSite);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTBTCapitalAccountID()).compareTo(other.isSetTBTCapitalAccountID());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTBTCapitalAccountID()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.TBTCapitalAccountID, other.TBTCapitalAccountID);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactName()).compareTo(other.isSetContactName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactName, other.contactName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMobilePhoneNumber()).compareTo(other.isSetMobilePhoneNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobilePhoneNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobilePhoneNumber, other.mobilePhoneNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactAddress()).compareTo(other.isSetContactAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactAddress, other.contactAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegisterDate()).compareTo(other.isSetRegisterDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegisterDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.registerDate, other.registerDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProxyBankInfoStruct(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("organizationCode:");
    if (this.organizationCode == null) {
      sb.append("null");
    } else {
      sb.append(this.organizationCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ZIP:");
    if (this.ZIP == null) {
      sb.append("null");
    } else {
      sb.append(this.ZIP);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fixedTelephone:");
    if (this.fixedTelephone == null) {
      sb.append("null");
    } else {
      sb.append(this.fixedTelephone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("FAX:");
    if (this.FAX == null) {
      sb.append("null");
    } else {
      sb.append(this.FAX);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("webSite:");
    if (this.webSite == null) {
      sb.append("null");
    } else {
      sb.append(this.webSite);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("TBTCapitalAccountID:");
    if (this.TBTCapitalAccountID == null) {
      sb.append("null");
    } else {
      sb.append(this.TBTCapitalAccountID);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contactName:");
    if (this.contactName == null) {
      sb.append("null");
    } else {
      sb.append(this.contactName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mobilePhoneNumber:");
    if (this.mobilePhoneNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.mobilePhoneNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contactAddress:");
    if (this.contactAddress == null) {
      sb.append("null");
    } else {
      sb.append(this.contactAddress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("registerDate:");
    sb.append(this.registerDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'name' was not present! Struct: " + toString());
    }
    if (organizationCode == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'organizationCode' was not present! Struct: " + toString());
    }
    if (address == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'address' was not present! Struct: " + toString());
    }
    if (ZIP == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ZIP' was not present! Struct: " + toString());
    }
    if (fixedTelephone == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'fixedTelephone' was not present! Struct: " + toString());
    }
    if (FAX == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'FAX' was not present! Struct: " + toString());
    }
    if (webSite == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'webSite' was not present! Struct: " + toString());
    }
    if (TBTCapitalAccountID == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'TBTCapitalAccountID' was not present! Struct: " + toString());
    }
    if (contactName == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'contactName' was not present! Struct: " + toString());
    }
    if (mobilePhoneNumber == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'mobilePhoneNumber' was not present! Struct: " + toString());
    }
    if (email == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'email' was not present! Struct: " + toString());
    }
    if (contactAddress == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'contactAddress' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProxyBankInfoStructStandardSchemeFactory implements SchemeFactory {
    public ProxyBankInfoStructStandardScheme getScheme() {
      return new ProxyBankInfoStructStandardScheme();
    }
  }

  private static class ProxyBankInfoStructStandardScheme extends StandardScheme<ProxyBankInfoStruct> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProxyBankInfoStruct struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ORGANIZATION_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.organizationCode = iprot.readString();
              struct.setOrganizationCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ZIP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ZIP = iprot.readString();
              struct.setZIPIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FIXED_TELEPHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fixedTelephone = iprot.readString();
              struct.setFixedTelephoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // FAX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.FAX = iprot.readString();
              struct.setFAXIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // WEB_SITE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.webSite = iprot.readString();
              struct.setWebSiteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TBTCAPITAL_ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.TBTCapitalAccountID = iprot.readString();
              struct.setTBTCapitalAccountIDIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CONTACT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactName = iprot.readString();
              struct.setContactNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // MOBILE_PHONE_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobilePhoneNumber = iprot.readString();
              struct.setMobilePhoneNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CONTACT_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactAddress = iprot.readString();
              struct.setContactAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // REGISTER_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.registerDate = iprot.readI32();
              struct.setRegisterDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProxyBankInfoStruct struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.organizationCode != null) {
        oprot.writeFieldBegin(ORGANIZATION_CODE_FIELD_DESC);
        oprot.writeString(struct.organizationCode);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        oprot.writeString(struct.address);
        oprot.writeFieldEnd();
      }
      if (struct.ZIP != null) {
        oprot.writeFieldBegin(ZIP_FIELD_DESC);
        oprot.writeString(struct.ZIP);
        oprot.writeFieldEnd();
      }
      if (struct.fixedTelephone != null) {
        oprot.writeFieldBegin(FIXED_TELEPHONE_FIELD_DESC);
        oprot.writeString(struct.fixedTelephone);
        oprot.writeFieldEnd();
      }
      if (struct.FAX != null) {
        oprot.writeFieldBegin(FAX_FIELD_DESC);
        oprot.writeString(struct.FAX);
        oprot.writeFieldEnd();
      }
      if (struct.webSite != null) {
        oprot.writeFieldBegin(WEB_SITE_FIELD_DESC);
        oprot.writeString(struct.webSite);
        oprot.writeFieldEnd();
      }
      if (struct.TBTCapitalAccountID != null) {
        oprot.writeFieldBegin(TBTCAPITAL_ACCOUNT_ID_FIELD_DESC);
        oprot.writeString(struct.TBTCapitalAccountID);
        oprot.writeFieldEnd();
      }
      if (struct.contactName != null) {
        oprot.writeFieldBegin(CONTACT_NAME_FIELD_DESC);
        oprot.writeString(struct.contactName);
        oprot.writeFieldEnd();
      }
      if (struct.mobilePhoneNumber != null) {
        oprot.writeFieldBegin(MOBILE_PHONE_NUMBER_FIELD_DESC);
        oprot.writeString(struct.mobilePhoneNumber);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.contactAddress != null) {
        oprot.writeFieldBegin(CONTACT_ADDRESS_FIELD_DESC);
        oprot.writeString(struct.contactAddress);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REGISTER_DATE_FIELD_DESC);
      oprot.writeI32(struct.registerDate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProxyBankInfoStructTupleSchemeFactory implements SchemeFactory {
    public ProxyBankInfoStructTupleScheme getScheme() {
      return new ProxyBankInfoStructTupleScheme();
    }
  }

  private static class ProxyBankInfoStructTupleScheme extends TupleScheme<ProxyBankInfoStruct> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProxyBankInfoStruct struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.name);
      oprot.writeString(struct.organizationCode);
      oprot.writeString(struct.address);
      oprot.writeString(struct.ZIP);
      oprot.writeString(struct.fixedTelephone);
      oprot.writeString(struct.FAX);
      oprot.writeString(struct.webSite);
      oprot.writeString(struct.TBTCapitalAccountID);
      oprot.writeString(struct.contactName);
      oprot.writeString(struct.mobilePhoneNumber);
      oprot.writeString(struct.email);
      oprot.writeString(struct.contactAddress);
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetRegisterDate()) {
        optionals.set(1);
      }
      if (struct.isSetStatus()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetRegisterDate()) {
        oprot.writeI32(struct.registerDate);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProxyBankInfoStruct struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.name = iprot.readString();
      struct.setNameIsSet(true);
      struct.organizationCode = iprot.readString();
      struct.setOrganizationCodeIsSet(true);
      struct.address = iprot.readString();
      struct.setAddressIsSet(true);
      struct.ZIP = iprot.readString();
      struct.setZIPIsSet(true);
      struct.fixedTelephone = iprot.readString();
      struct.setFixedTelephoneIsSet(true);
      struct.FAX = iprot.readString();
      struct.setFAXIsSet(true);
      struct.webSite = iprot.readString();
      struct.setWebSiteIsSet(true);
      struct.TBTCapitalAccountID = iprot.readString();
      struct.setTBTCapitalAccountIDIsSet(true);
      struct.contactName = iprot.readString();
      struct.setContactNameIsSet(true);
      struct.mobilePhoneNumber = iprot.readString();
      struct.setMobilePhoneNumberIsSet(true);
      struct.email = iprot.readString();
      struct.setEmailIsSet(true);
      struct.contactAddress = iprot.readString();
      struct.setContactAddressIsSet(true);
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.registerDate = iprot.readI32();
        struct.setRegisterDateIsSet(true);
      }
      if (incoming.get(2)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
    }
  }

}

